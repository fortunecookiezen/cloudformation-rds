---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'Template to create an RDS instance and a DB subnet group for use in a VPC. Template creates a postgres instance in a single availability zone'
Parameters:
  ASI:
    Type: String
    MinLength: 3
    MaxLength: 4
    Description: "asi of the other account zone - must be lower-case, limit 4 characters"
    AllowedPattern: "[a-z]*"
  Environment:
    Type: String
    MinLength: 3
    MaxLength: 4
    Description: "environment (dev|itg|cat|prod)"
    AllowedValues:
      - "dev"
      - "itg"
      - "cat"
      - "prod"
  Owner:
    Type: String
    Description: "email address of the the Owner of this stack"
    Default: "admin@root.com"
    AllowedPattern: "^[\\w-\\+]+(\\.[\\w]+)*@[\\w-]+(\\.[\\w]+)*(\\.[a-z]{2,})$"
  vpcid:
    Description: "Id of the vpc to deploy in"
    Type: AWS::EC2::VPC::Id
    ConstraintDescription: "Must be a valid VPC"
  dbsubnetids:
    Type: List<AWS::EC2::Subnet::Id>
    Description: "need two subnet ids for database subnet group"
  securitygroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: "EC2 Security group for database instance"
  DatabaseEngine:
    Type: String
    Default: postgres
    AllowedValues:
      - postgres
  DatabaseEngineVersion:
    Type: String
    Default: 10.6
    Description: "Database Engine Version - accept the default unless you know what you're doing"
  EnvironmentSize:
    Type: String
    Default: SMALL
    AllowedValues:
      - SMALL
      - MEDIUM
      - LARGE
    Description: Select Environment Size (S = 5GB, M = 20GB,L = 50GB)
  dbsubnetgroupdescription:
    Type: String
    Description: "database subnet group description"
    Default: "database subnet group spread across two subnets"
  databaseInstanceName:
    Type: String
    Description: "Name for the RDS database instance"
    Default: postgresInstance
  databasename:
    Type: String
    Description: "name for the database"
    Default: postgres
  dbuser:
    Type: String
    Description: "database user name e.g. wordpress"
    Default: postgres
  dbpassword:
    Type: String
    Description: "database password"
    NoEcho: true
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Environment Configuration"
        Parameters:
        - ASI
        - Environment
        - Owner
      - Label:
          default: "Network Configuration"
        Parameters:
        - vpcid
        - dbsubnetids
        - TargetIp2
    ParameterLabels:
      vpcid:
        default: "VPC for the security group"
      dbsubnetids:
        default: "ip of the inbound resolver you will query"
      securitygroup:
        default: "ip of the inbound resolver you will query"
      dbsubnetids:
        default: "need two subnet ids for database subnet group"
      securitygroup:
        default: "EC2 Security group for database instance"
      DatabaseEngine:
        default: "face it, it's postgres"
      DatabaseEngineVersion:
        default: "Database Engine Version - accept the default unless you know what you're doing"
      EnvironmentSize:
        default: Environment Size (S = 5GB, M = 20GB,L = 50GB)
      dbsubnetgroupdescription:
        default: "database subnet group description"
      databaseInstanceName:
        default: "Name for the RDS database instance"
      databasename:
        default: "name for the database"
      dbuser:
        default: "database user name"
      dbpassword:
        default: "database password"
Mappings:
  InstanceSize:
    SMALL:
      "SIZE" : "5"
      "DB" : "db.t2.small"
      "STORTYPE" : "standard"
    MEDIUM:
      "SIZE" : "20"
      "DB" : "db.t2.medium"
      "STORTYPE" : "gp2"
    LARGE:
      "SIZE" : "50"
      "DB" : "db.t2.large"
      "STORTYPE" : "gp2"
Resources:
  dbmonitorRole:
    Type: "AWS::IAM::Role"
    Properties:
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole'
      AssumeRolePolicyDocument:
        Version: '2008-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service: 'rds.amazonaws.com'
          Action: 'sts:AssumeRole'
        - Effect: Allow
          Principal:
            Service: 'monitoring.rds.amazonaws.com'
          Action: 'sts:AssumeRole'
  dbsubnetgroup:
    Type: "AWS::RDS::DBSubnetGroup"
    Properties: 
      DBSubnetGroupDescription: !Ref dbsubnetgroupdescription
      SubnetIds:
        - !Select [0, !Ref dbsubnetids]
        - !Select [1, !Ref dbsubnetids]
      Tags:
        - Key: "Name"
          Value: "dbsubnetgroup" 
  rdsinstance:
    Type: "AWS::RDS::DBInstance"
    DeletionPolicy: Snapshot
    UpdateReplacePolicy: Snapshot
    Properties:
      AllocatedStorage: !FindInMap [InstanceSize, !Ref EnvironmentSize, SIZE] #Parameter minimum of 20 for gp2 Parameter groups example?
      AllowMajorVersionUpgrade: false #setting this as a safety
      AutoMinorVersionUpgrade: false #maybe this should be false. autoupgrade will break automation
      BackupRetentionPeriod: 30
      CopyTagsToSnapshot: true #until proven otherwise
      DBInstanceClass: !FindInMap [InstanceSize, !Ref EnvironmentSize, DB]
      DBInstanceIdentifier: !Ref databaseInstanceName
      DBName: !Ref databasename
      DBSubnetGroupName: !Ref dbsubnetgroup
      DeleteAutomatedBackups: false #parameter?
      DeletionProtection: false #parameter?
      EnableCloudwatchLogsExports:
        - postgresql
        - upgrade
      #EnablePerformanceInsights: true #figure this out does not work for small instance size.
      Engine: !Ref DatabaseEngine #postgres
      EngineVersion: !Ref DatabaseEngineVersion
      # KmsKeyId: !Ref kmskey implement later
      MasterUsername: !Ref dbuser
      MasterUserPassword: !Ref dbpassword #implement later to pull from ssm parameter store
      MonitoringInterval: 60 #60 second intervals
      MonitoringRoleArn: !GetAtt ["dbmonitorRole", "Arn"]
      #PerformanceInsightsKMSKeyId: String #figure this out
      #PerformanceInsightsRetentionPeriod: 14 #14 days retention
      #PreferredBackupWindow: "09:01-09:31" #GMT
      #PreferredMaintenanceWindow: "Mon:07:11-Mon:07:41" #GMT
      StorageEncrypted: true
      StorageType: !FindInMap [InstanceSize, !Ref EnvironmentSize, STORTYPE]
      Tags:
        - Key: Name
          Value: !Ref databasename
        - Key: Owner
          Value: !Ref Owner
        - Key: Environment
          Value: !Ref Environment
        - Key: ASI
          Value: !Ref ASI
      VPCSecurityGroups:
        - !Ref securitygroup
Outputs:
  dburl:
    Description: "database url"
    Value: !GetAtt rdsinstance.Endpoint.Address
    Export:
      Name: !Sub '${ASI}-${Environment}-rdsinstance-url'
  dbport:
    Description: "database port"
    Value: !GetAtt rdsinstance.Endpoint.Port
    Export:
      Name: !Sub ''${ASI}-${Environment}-rdsinstance-port'